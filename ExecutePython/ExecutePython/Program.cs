using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ExecutePython
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                Microsoft.Scripting.Hosting.ScriptEngine pythonEngine = IronPython.Hosting.Python.CreateEngine();

                // Print the default search paths
                System.Console.Out.WriteLine("Search paths:");
                ICollection<string> searchPaths = pythonEngine.GetSearchPaths();
                foreach (string path in searchPaths)
                {
                    System.Console.Out.WriteLine(path);
                }
                System.Console.Out.WriteLine();

                // Now modify the search paths to include the directory from
                // which we execute the script
                searchPaths.Add(@"Lib");
                searchPaths.Add(@"Lib\\site-packages");
                pythonEngine.SetSearchPaths(searchPaths);

                Microsoft.Scripting.Hosting.ScriptScope scope = pythonEngine.CreateScope();
                pythonEngine.ExecuteFile("Universal_Robots.py", scope);

                object RobotPost = pythonEngine.Operations.Invoke(scope.GetVariable("RobotPost"), "Universal Robotics", "Generic UR robot");
                pythonEngine.Operations.InvokeMember(RobotPost, "ProgStart", "Program");
                pythonEngine.Operations.InvokeMember(RobotPost, "RunMessage", "Program generated by RoboDK.", true);
                var pose = scope.GetVariable("Pose");
                double[] inputs = new double[] { 807.766544, -963.699898, 41.478944, 0, 0, 0 };
                var pose_result = pose(inputs);
                pythonEngine.Operations.InvokeMember(RobotPost, "setFrame", pose_result);
                inputs = new double[] { 62.5, -108.253175, 100, -60, 90, 0 };
                pose_result = pose(inputs);
                pythonEngine.Operations.InvokeMember(RobotPost, "setTool", pose_result);
                pythonEngine.Operations.InvokeMember(RobotPost, "setSpeed", 100);
                pythonEngine.Operations.InvokeMember(RobotPost, "setAcceleration", 3000);
                inputs = new double[] { 200, 200, 500, 180, 0, 180 };
                double[] inputs_1 = new double[] { 200, 200, 500, 180, 0, 180 };
                pose_result = pose(inputs);
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveJ", pose_result, inputs_1);

                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 200, 250, 348.734575, 180, 0, -150 }),
                    new double[] { -41.62707, -8.89064, -30.01809, 60.62329, 49.66749, -258.98418 });
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 200, 200, 262.132034, 180, 0, -150 }),
                    new double[] { -43.73892, -3.91728, -35.77935, 58.57566, 54.11615, -253.81122 });
                pythonEngine.Operations.InvokeMember(RobotPost, "RunMessage", "Setting air valve 1 on");
                pythonEngine.Operations.InvokeMember(RobotPost, "RunCode", "TCP_On", true);
                pythonEngine.Operations.InvokeMember(RobotPost, "Pause", 1000);
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 200, 250, 348.734575, 180, 0, -150 }),
                    new double[] { -41.62707, -8.89064, -30.01809, 60.62329, 49.66749, -258.98418 });
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 250, 300, 278.023897, 180, 0, -150 }),
                    new double[] { -37.52588, -6.32628, -34.59693, 53.52525, 49.24426, -251.44677 });
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 250, 250, 191.421356, 180, 0, -150 }),
                    new double[] { -39.75778, -1.04537, -40.37883, 52.09118, 54.15317, -246.94403 });
                pythonEngine.Operations.InvokeMember(RobotPost, "RunMessage", "Setting air valve off");
                pythonEngine.Operations.InvokeMember(RobotPost, "RunCode", "TCP_Off", true);
                pythonEngine.Operations.InvokeMember(RobotPost, "Pause", 1000);
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 250, 300, 278.023897, 180, 0, -150 }),
                    new double[] { -37.52588, -6.32628, -34.59693, 53.52525, 49.24426, -251.44677 });
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 250, 200, 278.023897, 180, 0, -150 }),
                    new double[] { -41.85389, -1.95619, -34.89154, 57.43912, 52.34162, -253.73403 });
                pythonEngine.Operations.InvokeMember(RobotPost, "MoveL", pose(new double[] { 250, 150, 191.421356, 180, 0, -150 }),
                    new double[] { -43.82111, 3.29703, -40.29493, 56.02402, 56.61169, -249.23532 });
                pythonEngine.Operations.InvokeMember(RobotPost, "ProgFinish", "Program");
                pythonEngine.Operations.InvokeMember(RobotPost, "ProgSave", "D:\\tmp", "Program");

                IList<object> originalResult = (IList<object>)pythonEngine.Operations.GetMember(RobotPost, "PROG");
                foreach (object element in originalResult)
                {
                    Console.WriteLine((string)element);
                }
                Console.ReadKey();
            }
            catch (Exception ex)
            {
                Console.WriteLine("error ---------------- " + ex.ToString());
                Console.ReadKey();
            }
        }
    }
}
